{"ast":null,"code":"var _jsxFileName = \"C:\\\\RailwayTicketManagementApp\\\\HealthCare\\\\frontend\\\\src\\\\pages\\\\Login.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport axios from 'axios';\nimport Cookies from 'js-cookie'; // ✅ import this\nimport { useNavigate } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction Login() {\n  _s();\n  const navigate = useNavigate();\n  const [formData, setFormData] = useState({\n    username: '',\n    password: ''\n  });\n  const [error, setError] = useState('');\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const csrfToken = Cookies.get('csrftoken'); // ✅ get token from cookie\n\n    try {\n      const res = await axios.post('http://localhost:8000/api/accounts/login/', formData, {\n        withCredentials: true,\n        headers: {\n          'X-CSRFToken': csrfToken // ✅ send token in headers\n        }\n      });\n      if (res.status === 200) {\n        const role = res.data.role;\n        navigate(role === 'doctor' ? '/dashboard/doctor' : '/dashboard/patient');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('❌ Invalid credentials or server error.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"form-box\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"message\",\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Username\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        name: \"username\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Password\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        name: \"password\",\n        onChange: handleChange,\n        required: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        children: \"Login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_s(Login, \"oG4x7kS04vrCsKhre14bzX1JI/w=\", false, function () {\n  return [useNavigate];\n});\n_c = Login;\nexport default Login;\nvar _c;\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"names":["React","useState","axios","Cookies","useNavigate","jsxDEV","_jsxDEV","Login","_s","navigate","formData","setFormData","username","password","error","setError","handleChange","e","target","name","value","handleSubmit","preventDefault","csrfToken","get","res","post","withCredentials","headers","status","role","data","err","console","className","children","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","onChange","required","type","_c","$RefreshReg$"],"sources":["C:/RailwayTicketManagementApp/HealthCare/frontend/src/pages/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport axios from 'axios';\r\nimport Cookies from 'js-cookie'; // ✅ import this\r\nimport { useNavigate } from 'react-router-dom';\r\n\r\nfunction Login() {\r\n  const navigate = useNavigate();\r\n  const [formData, setFormData] = useState({ username: '', password: '' });\r\n  const [error, setError] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData({...formData, [e.target.name]: e.target.value});\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const csrfToken = Cookies.get('csrftoken'); // ✅ get token from cookie\r\n\r\n    try {\r\n      const res = await axios.post(\r\n        'http://localhost:8000/api/accounts/login/',\r\n        formData,\r\n        {\r\n          withCredentials: true,\r\n          headers: {\r\n            'X-CSRFToken': csrfToken, // ✅ send token in headers\r\n          }\r\n        }\r\n      );\r\n\r\n      if (res.status === 200) {\r\n        const role = res.data.role;\r\n        navigate(role === 'doctor' ? '/dashboard/doctor' : '/dashboard/patient');\r\n      }\r\n    } catch (err) {\r\n      console.error(err);\r\n      setError('❌ Invalid credentials or server error.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"form-box\">\r\n      <h2>Login</h2>\r\n      {error && <p className=\"message\">{error}</p>}\r\n\r\n      <form onSubmit={handleSubmit}>\r\n        <label>Username</label>\r\n        <input name=\"username\" onChange={handleChange} required />\r\n\r\n        <label>Password</label>\r\n        <input type=\"password\" name=\"password\" onChange={handleChange} required />\r\n\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Login;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}